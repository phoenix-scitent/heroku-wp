/* packer link http://dean.edwards.name/packer/ */
var updateProducts, berocket_set_slider, berocket_product_recount;
(function ($){
    $(document).ready(function (){

        var berocket_aapf_widget_product_filters = [],
            berocket_aapf_widget_product_limits = [],
            berocket_aapf_widget_product_price_limit = [],
            berocket_aapf_attribute_data = {name: [], data: [], jquery: false, loaded: false},
            berocket_aapf_child_parent_loaded = true,
            woocommerce_pagination_page = 1,
            berocket_aapf_widget_wait_for_button = false,
            berocket_aapf_widget_selected_filters = [],
            berocket_aapf_404_jump = false,
            berocket_aapf_404_jump_fail = false,
            berocket_aapf_widget_first_page_jump = true,
            $berocket_aapf_last_changed,
            berocket_last_ajax_request = null,
            berocket_last_ajax_request_id = 1;
        the_ajax_script.woocommerce_removes = JSON.parse(the_ajax_script.woocommerce_removes);

        if( $('.woocommerce-pagination').hasClass('.woocommerce-pagination') ){
            woocommerce_pagination_page = parseInt( $('.woocommerce-pagination .current').first().text() );
            if( woocommerce_pagination_page < 1 ) woocommerce_pagination_page = 1;
        }

        if( $('.berocket_aapf_widget_update_button').hasClass('berocket_aapf_widget_update_button') ){
            berocket_aapf_widget_wait_for_button = true;
        }

        function berocket_fire( func ){
            if ( typeof the_ajax_script.user_func != 'undefined'
                && the_ajax_script.user_func != null
                && typeof func != 'undefined'
                && func.length > 0
            ) {
                eval( func );
            }
        }
        function init_styler(){
            setTimeout(function() {
               $('.themed').styler();
            }, 100);
        }

        function update_selected_area() {
            if ( ! $('.berocket_aapf_widget_selected_area').hasClass('berocket_aapf_widget_selected_area') ) {
                return false;
            }
            tmp_html = '';
            prev_label = false;
            el_type = '';
            selected = [];
            if ( typeof berocket_aapf_widget_selected_filters != 'undefined' && berocket_aapf_widget_selected_filters.length > 0 ) {
                $(berocket_aapf_widget_selected_filters).each(function (i, $el) {
                    if ($el.is('select')) {
                        label = $el.parents('ul.berocket_aapf_widget').prev().find('h3').text();
                        option = $el.find('option:selected').text();
                        el_type = 'select';
                        el_id = $el.data('taxonomy');
                    } else if ($el.is('input')) {
                        label = $el.parents('ul.berocket_aapf_widget').prev().find('h3').text();
                        option = $el.closest('li').find('label').text();
                        el_type = $el.attr('type');
                        el_id = $el.parents('li').find('label').data('for');
                        if ( $el.data('taxonomy-type') == 'color' ) {
                            el_type = $el.data('taxonomy-type');
                            option = $el.parents('li').find('label').html();
                        }
                    } else if ($el.hasClass('berocket_filter_slider')) {
                        val1 = $el.data('value_1');
                        val2 = $el.data('value_2');
                        if (val1 != $el.data('min') || val2 != $el.data('max')) {
                            if ($el.hasClass('berocket_filter_price_slider')) {
                                label = 'Price';
                            } else {
                                label = $el.parents('ul.berocket_aapf_widget').prev().find('h3').text();
                            }
                        }
                        el_type = 'slider';
                        el_id = $el.data('fields_2');
                        option = val1 + ' - ' + val2;
                    }

                    option = '<li><a href="Unselect ' + label + '" data-el_type="' + el_type + '" data-el_id="' + el_id + '"><i class="fa fa-times"></i> ' + option + '</a></li>';

                    if ( ! $el.hasClass('berocket_filter_slider') || selected.indexOf( $el.data('taxonomy') ) == -1 )
                    if (prev_label === false) {
                        tmp_html += '<div class="berocket_aapf_widget_selected_filter"><span>' + label + '</span><ul>' + option;
                    } else if (prev_label == $el.data('taxonomy')) {
                        tmp_html += option;
                    } else {
                        tmp_html += '</ul></div><div class="berocket_aapf_widget_selected_filter"><span>' + label + '</span><ul>' + option;
                    }

                    prev_label = $el.data('taxonomy');
                    selected.push( $el.data('taxonomy') );
                });
            }

            if ( tmp_html == '' ) {
                $('.berocket_aapf_widget_selected_area_hide').parent().hide();
                $('.berocket_aapf_widget_selected_area_text').html('');
            } else {
                tmp_html += '</ul></div>';
                tmp_html += '<ul><li><a href="Unselect all" class="br_unselect_all"><i class="fa fa-times"></i> Unselect all</a></li></ul>';
                $('.berocket_aapf_widget_selected_area').html(tmp_html);
                $('.berocket_aapf_widget_selected_area_hide').parent().show();
            }
        }

        $(document).on( 'click', '.berocket_aapf_product_count_desc', function( event ) {
            event.preventDefault();
            event.stopPropagation();
        });

        $(document).on( 'click', '.berocket_aapf_product_count_desc .berocket_aapf_close_pc', function( event ) {
            event.preventDefault();
            $(this).parents('.berocket_aapf_product_count_desc').remove();
        });

        function update_data_containers() {
            berocket_aapf_widget_product_filters = [];
            berocket_aapf_widget_selected_filters = [];

            $('.berocket_aapf_widget li:not(.slider) input, .berocket_aapf_widget li:not(slider) select').each(function (i,o) {
                $el = $(o);

                if ( $el.is("select") ) {
                    el_data = $el.find("option:selected").data();
                    el_data_child_parent_depth = $el.parents('.berocket_aapf_widget').data('child_parent_depth') || 0;

                    var el_show = true;
                    $(berocket_aapf_widget_product_filters).each(function (i, o) {
                        if (o[0] == el_data.taxonomy) {
                            if ( o[5] < el_data_child_parent_depth ) {
                                if ( el_data.term_id != undefined && el_data.term_slug != undefined ) {
                                    berocket_aapf_widget_product_filters[i] = [el_data.taxonomy, el_data.term_id, el_data.operator, el_data.term_slug, el_data.filter_type, el_data_child_parent_depth];
                                    berocket_aapf_widget_selected_filters[i] = $el;
                                }
                            }
                            el_show = false;
                        }
                    });
                    if( el_show && $el.val() ){
                        berocket_aapf_widget_product_filters[berocket_aapf_widget_product_filters.length] = [el_data.taxonomy, el_data.term_id, el_data.operator, el_data.term_slug, el_data.filter_type, el_data_child_parent_depth];
                        berocket_aapf_widget_selected_filters[berocket_aapf_widget_selected_filters.length] = $el;
                    }
                } else if ( $el.is(':checked') || $el.is(':selected') ){
                    el_data = $el.data();
                    el_data_child_parent_depth = $el.parents('.berocket_aapf_widget').data('child_parent_depth') || 0;
                    
                    var el_show = true;
                    remove = 0;
                    $(berocket_aapf_widget_product_filters).each(function (i, o) {
                        if ( o[0] == el_data.taxonomy ) {
                            if ( o[5] < el_data_child_parent_depth ) {
                                berocket_aapf_widget_product_filters.splice( i - remove, 1 );
                                berocket_aapf_widget_selected_filters.splice( i - remove, 1 );
                                remove++;
                            } else if (  o[1] == el_data.term_id ) {
                                el_show = false;
                            }
                        }
                    });
                    if (el_data.term_id != undefined && el_show) {
                        berocket_aapf_widget_product_filters[berocket_aapf_widget_product_filters.length] = [el_data.taxonomy, el_data.term_id, el_data.operator, el_data.term_slug, el_data.filter_type, el_data_child_parent_depth];
                        berocket_aapf_widget_selected_filters[berocket_aapf_widget_selected_filters.length] = $el;
                    }
                }
            });

            berocket_aapf_widget_product_limits = [];
            berocket_aapf_widget_product_price_limit = [];
            $t = $('.berocket_filter_slider');
            if( $t.hasClass('berocket_filter_slider') ){
                $t.each(function (i,o){
                    if ( $(o).parents( '.berocket_child_parent_sample' ).length == 0 ) { 
                        var all_terms_name = $(o).data('all_terms_name');
                        var string_slider_edited = true;
                        val1 = $(o).data('value_1');
                        val2 = $(o).data('value_2');
                        data_child_parent_depth = $(o).parents('.berocket_aapf_widget').data('child_parent_depth') || 0;
                        if( all_terms_name != null ){
                            if( ! ( val1 != all_terms_name[ $(o).data( 'min' ) ] || val2 != all_terms_name[ $(o).data( 'max' ) ] ) ) {
                                string_slider_edited = false;
                            }
                        }
                        if( ( val1 != ( $(o).data( 'min' ) / $(o).data( 'step' ) ) || val2 != ( $(o).data( 'max' ) / $(o).data( 'step' ) ) ) && ( string_slider_edited || data_child_parent_depth > 0 ) ) {
                            berocket_aapf_widget_selected_filters[berocket_aapf_widget_selected_filters.length] = $(o);
                            if( $(o).hasClass('berocket_filter_price_slider') ){
                                berocket_aapf_widget_product_price_limit = [val1, val2];
                            } else {
                                var add_limit = true;
                                for( i = 0 ; i < berocket_aapf_widget_product_limits.length ; i++ ) {
                                    if( berocket_aapf_widget_product_limits[ i ][ 0 ] == $(o).data( 'taxonomy' ) ) {
                                        if ( berocket_aapf_widget_product_limits[ i ][ 3 ] < data_child_parent_depth ) {
                                            berocket_aapf_widget_product_limits[i] = [$(o).data('taxonomy'), val1, val2, data_child_parent_depth];
                                        }
                                        add_limit = false;
                                    }
                                }
                                if( add_limit ) {
                                    berocket_aapf_widget_product_limits[berocket_aapf_widget_product_limits.length] = [$(o).data('taxonomy'), val1, val2, data_child_parent_depth];
                                }
                            }
                        }
                    }
                });
            }
        }

        updateProducts = function ( $force ){
            $('.berocket_aapf_product_count_desc').remove();
            if ( berocket_unselect_all ) return false;

            // call user func before_update
            if ( the_ajax_script.user_func != null )
                berocket_fire( the_ajax_script.user_func.before_update );

            if ( berocket_aapf_404_jump ) {
                first_page_404 = the_ajax_script.first_page;
                the_ajax_script.first_page = true;
                berocket_aapf_widget_first_page_jump_404 = berocket_aapf_widget_first_page_jump;
                berocket_aapf_widget_first_page_jump = true;
            }
            update_data_containers();
            update_selected_area();

            if ( typeof $force == 'undefined' ) $force = false;
            // if we have update_button on the page we must wait for it to be clicked
            if ( ! $force && berocket_aapf_widget_wait_for_button && ! the_ajax_script.ub_product_count ) return false;

            args = {
                current_language: the_ajax_script.current_language,
                terms: berocket_aapf_widget_product_filters,
                price: berocket_aapf_widget_product_price_limit,
                limits: berocket_aapf_widget_product_limits,
                product_cat: the_ajax_script.product_cat,
                action: 'berocket_aapf_listener',
                orderby: $('.woocommerce-ordering select.orderby').val(),
                attributes: [],
                cat_limit: [],
            };

            if ( ! $force && berocket_aapf_widget_wait_for_button && the_ajax_script.ub_product_count ) {
                t_args = args;
                t_args.action = 'berocket_aapf_listener_pc';
                t_args.location = the_ajax_script.current_page_url;
                $.post(the_ajax_script.ajaxurl, t_args, function (data) {
                    $('.berocket_aapf_product_count_desc').remove();
                    $widget = $berocket_aapf_last_changed.parents('.berocket_aapf_widget');
                    if ( ( $widget.offset().left + $widget.width() ) < ( $(window).width() / 2 ) ) {
                        $berocket_aapf_last_changed.parents('.berocket_aapf_widget').append('<div class="berocket_aapf_product_count_desc br_aapf_pcd_left"><span></span>'+data.product_count+' '+the_ajax_script.ub_product_text+' <a href="#update" class="berocket_aapf_widget_update_button" >'+the_ajax_script.ub_product_button_text+'</a> <a class="berocket_aapf_close_pc" href="#close"><i class="fa fa-times"></i></a></div>');
                    } else {
                        $berocket_aapf_last_changed.parents('.berocket_aapf_widget').append('<div class="berocket_aapf_product_count_desc br_aapf_pcd_right"><span></span>'+data.product_count+' products <a class="berocket_aapf_close_pc" href="#close"><i class="fa fa-times"></i></a></div>');
                    }
                }, 'json');
                return false;
            }
            var berocket_this_ajax_request_id = berocket_last_ajax_request_id = berocket_last_ajax_request_id + 1;
            if ( berocket_last_ajax_request == null ) {
                $(the_ajax_script.products_holder_id).addClass('hide_products').append(the_ajax_script.load_image);
            } else {
                berocket_last_ajax_request.abort();
                berocket_last_ajax_request = null;
            }
            if( the_ajax_script.pos_relative ) {
                $('.berocket_aapf_widget_loading').parent().css('position', 'relative');
            }
            if( $('.berocket_aapf_widget_loading_container').hasClass('berocket_aapf_widget_loading_container') ) {
                loading_top = ( $(document).scrollTop() + ( window.innerHeight / 2 ) ) - $('.berocket_aapf_widget_loading').offset().top;
                if ( loading_top < 100 ) {
                    loading_top = 100;
                } else if ( loading_top > ( $('.berocket_aapf_widget_loading').height() - $('.berocket_aapf_widget_loading_container').height() ) ) {
                    loading_top = $('.berocket_aapf_widget_loading').height() - $('.berocket_aapf_widget_loading_container').height();
                }
                $('.berocket_aapf_widget_loading_container').css('top', loading_top);
            }

            if( the_ajax_script.seo_friendly_urls && 'history' in window && 'pushState' in history ) {
                updateLocation(args, true);
                args.location = location.href;
            }else{
                args.location = the_ajax_script.current_page_url;

                cur_page = $('.woocommerce-pagination span.current').first().text();
                if( prev_page = location.href.replace(/.+\/page\/([0-9]+).+/, "$1") ){
                    if( ! parseInt( cur_page ) ){
                        cur_page = prev_page;
                    }
                    if(berocket_aapf_widget_first_page_jump && the_ajax_script.first_page) {
                        cur_page = 1;
                    }
                    args.location = args.location.replace(/\/?/,"") + "/page/" + cur_page + "/";
                }else if( prev_page = location.href.replace(/.+paged?=([0-9]+).+/, "$1") ){
                    if( ! parseInt( cur_page ) ){
                        cur_page = prev_page;
                    }
                    if(berocket_aapf_widget_first_page_jump && the_ajax_script.first_page)   {
                        cur_page = 1;
                    }
                    args.location = args.location.replace(/\/?/,"") + "/?page=" + cur_page + "";
                }
                if( the_ajax_script.seo_friendly_urls ) {
                    uri_request = updateLocation(args, false);
                    location.hash = '';
                    if( parseInt( cur_page ) )
                        location.hash = "paged="+parseInt( cur_page )+"&";
                    if( uri_request != "")
					    uri_request = 'filters=' + uri_request;
                    location.hash += 'filters=('+uri_request+')';
                }
            }

            if( the_ajax_script.scroll_shop_top ) {
                var top_scroll_offset = 0;
                if( $( the_ajax_script.products_holder_id ).length ) {
                    top_scroll_offset = $( the_ajax_script.products_holder_id ).offset().top + parseInt(the_ajax_script.scroll_shop_top_px);
                    if(top_scroll_offset < 0) top_scroll_offset = 0;
                }
                $("html, body").animate({ scrollTop: top_scroll_offset }, "slow");
            }
            args.location = updateLocation(args, true, true);
            if( the_ajax_script.recount_products ) {
                $('.berocket_aapf_widget').each(function (i,o){
                    if( $(o).data('count_show') == 'show' ) {
                        args.attributes[i] = $(o).data('attribute');
                        args.cat_limit[i] = $(o).data('cat_limit');
                    }
                });
            }
            if(the_ajax_script.ajax_request_load) {
                if( the_ajax_script.ajax_request_load_style == 'jquery' ) {
                    url = args.location;
                    return_type = 'html';
                } else {
                    if( the_ajax_script.ajax_request_load_style == 'js' ) {
                        return_type = 'html';
                    } else {
                        return_type = 'json';
                    }
                    if( args.location.indexOf('?') > 0 ) {
                        url = args.location+'&explode=explode';
                    } else {
                        url = args.location+'/?explode=explode';
                    }
                }
            } else {
                return_type = 'json';
                url = the_ajax_script.ajaxurl;
            }
            if(the_ajax_script.ajax_request_load) {
                t_args = args;
                args = {
                    location: t_args.location,
                    attributes: t_args.attributes,
                    cat_limit: t_args.cat_limit,
                };
            }
            berocket_aapf_attribute_data.loaded = false;
            var berocket_this_ajax_request = berocket_last_ajax_request = $.post(url, args, function (data) {
                berocket_last_ajax_request = null;
                berocket_last_ajax_request_id = 1;
                $('.berocket_aapf_product_count_desc').remove();
                if( the_ajax_script.ajax_request_load && the_ajax_script.ajax_request_load_style == 'jquery' ) {
					$data = $(data);
                    args_ajax = {
                        pagination:$data.find(the_ajax_script.pagination_class).prop('outerHTML'),
                        catalog_ordering:$data.find(the_ajax_script.ordering_class).prop('outerHTML'),
                        result_count:$data.find(the_ajax_script.result_count_class).prop('outerHTML'),
                    }
					if( $data.find('.woocommerce-info').hasClass('woocommerce-info') ) {
					    args_ajax.no_products = $data.find('.woocommerce-info').prop('outerHTML');
					} else {
					    args_ajax.products = $data.find(the_ajax_script.products_holder_id).prop('outerHTML');
					}
					result = afterAjaxLoad(args_ajax);
                    berocket_aapf_attribute_data.jquery = $data;
                    berocket_aapf_attribute_data.loaded = true;
                    berocket_product_recount();
                } else if( the_ajax_script.ajax_request_load && the_ajax_script.ajax_request_load_style == 'js' ) {
                    if( data.indexOf('||EXPLODE||') > 0 ) {
                        products = data.split('||EXPLODE||');
                        products = products[1];
                    } else {
                        products = false;
                    }
                    json_data = JSON.parse( data.split('||JSON||')[1] );
                    data = json_data;
                    if( ! products ) {
                        data.no_products = the_ajax_script.no_products;
                    } else {
                        data.products = products;
                    }
                    result = afterAjaxLoad(data);
                    berocket_aapf_attribute_data.name = data.attributesname;
                    berocket_aapf_attribute_data.data = data.attributes;
                    berocket_aapf_attribute_data.loaded = true;
                    berocket_product_recount();
                } else {
                    result = afterAjaxLoad(data);
                    berocket_aapf_attribute_data.name = data.attributesname;
                    berocket_aapf_attribute_data.data = data.attributes;
                    berocket_aapf_attribute_data.loaded = true;
                    berocket_product_recount();
                }

                if ( result.reset_pagination_event ) {
                    aapf_action_init();
                }
                $('.berocket_aapf_widget_loading').remove();
                berocket_aapf_widget_first_page_jump = true;
                berocket_aapf_404_jump_fail = false;

                // call user func after_update
                if( the_ajax_script.user_func != null )
                    berocket_fire( the_ajax_script.user_func.after_update );
            }, return_type).fail(function() {
                if ( berocket_last_ajax_request_id == berocket_this_ajax_request_id ) {
                    if( ! berocket_aapf_404_jump_fail ) {
                        berocket_aapf_404_jump = true;
                        berocket_aapf_404_jump_fail = true;
                        updateProducts($force);
                    } else {
                        berocket_aapf_404_jump_fail = false;
                    }
                }
            });
            if ( berocket_aapf_404_jump ) {
                the_ajax_script.first_page = first_page_404;
                berocket_aapf_widget_first_page_jump = berocket_aapf_widget_first_page_jump_404;
                first_page_404 = false;
            }
        }

        function afterAjaxLoad( args ) {
            result = {
                reset_pagination_event:false,
            }
            if( ! the_ajax_script.woocommerce_removes.result_count ) {
                $(the_ajax_script.result_count_class).html( $(args.result_count).html() || '' );
            }
            if( ! the_ajax_script.woocommerce_removes.ordering ) {
                $(the_ajax_script.ordering_class).html( $(args.catalog_ordering).html() || '' );
            }
            if( ! the_ajax_script.woocommerce_removes.pagination ) {
                $(the_ajax_script.pagination_class).html( $(args.pagination).html() || '' );
            }

            if ( typeof args.products != 'undefined' ) {
                if( $(the_ajax_script.pagination_class).length == 0 && ! the_ajax_script.woocommerce_removes.pagination ) {
                    args.products = args.products+( args.pagination || '' );
                    result.reset_pagination_event = true;
                }
                if( $(the_ajax_script.ordering_class).length == 0 && ! the_ajax_script.woocommerce_removes.ordering ) {
                    args.products = ( args.catalog_ordering || '' )+args.products;
                }
                if( $(the_ajax_script.result_count_class).length == 0 && ! the_ajax_script.woocommerce_removes.result_count ) {
                    args.products = ( args.result_count || '' )+args.products;
                }
            }
            // call user func on_update
            if( the_ajax_script.user_func != null )
                berocket_fire( the_ajax_script.user_func.on_update );

            if ( $('.woocommerce-info').hasClass('woocommerce-info') && ! $(the_ajax_script.products_holder_id).is(':visible') ) {
                if ( typeof args.products != 'undefined' ) {
                    $('.woocommerce-info').replaceWith(args.products);
                }
            } else {
                if ( typeof args.no_products != 'undefined' ) {
                    if ( $(the_ajax_script.products_holder_id).length > 0 ) {
                        $(the_ajax_script.products_holder_id).html(args.no_products).removeClass('hide_products');
                    } else if ( $('div.woocommerce').length > 0 ) {
                        $('div.woocommerce').html(args.no_products);
                    }
                } else {
                    var $products = $(args.products);
                    if ( $products.is(the_ajax_script.products_holder_id) ) {
                        if ( $(the_ajax_script.products_holder_id).length > 0 ) {
                            $(the_ajax_script.products_holder_id).replaceWith($products);
                        } else {
                            if ( $('div.woocommerce').length > 0 ) {
                                $('div.woocommerce').html($products.prop('outerHTML'));
                            }
                        }
                    } else {
                        if ( $products.find(the_ajax_script.products_holder_id).length > 0 ) {
                            if ( $(the_ajax_script.products_holder_id).length > 0 ) {
                                $(the_ajax_script.products_holder_id).html($products.find(the_ajax_script.products_holder_id).html()).removeClass('hide_products');
                            } else if ( $('div.woocommerce').length > 0 ) {
                                $('div.woocommerce').html($products.find(the_ajax_script.products_holder_id).prop('outerHTML'));
                            }
                        } else {
                            if ( $(the_ajax_script.products_holder_id).length > 0 ) {
                                $(the_ajax_script.products_holder_id).html('').removeClass('hide_products');
                            } else if ( $('div.woocommerce').length > 0 ) {
                                $('div.woocommerce').html('');
                            }
                        }
                    }
                }
            }
            return result;
        }

        berocket_product_recount = function () {
            if( berocket_aapf_attribute_data.loaded && berocket_aapf_child_parent_loaded ) {
                if ( the_ajax_script.ajax_request_load_style == 'jquery' && the_ajax_script.ajax_request_load ) {
                    var $data = berocket_aapf_attribute_data.jquery;
                    if( the_ajax_script.recount_products ) {
                        $data.find('.berocket_aapf_widget').each(function (i,o){
                            if( $(o).data('count_show') == 'show' ) {
                                if( $(o).data('type') == 'color' || $(o).data('type') == 'checkbox' || $(o).data('type') == 'image' ) {
                                    $(o).find('input').each( function(j, obj) {
                                        $('.checkbox_'+$(obj).data('term_id')).parents('li').find('.berocket_aapf_count').text($(obj).parents('li').find('.berocket_aapf_count').text());
                                        hide_show_o_value( $('.checkbox_'+$(obj).data('term_id')), $(obj).parents('li').find('.berocket_aapf_count').text() );
                                    });
                                } else if( $(o).data('type') == 'radio' ) {
                                    $(o).find('input').each( function(j, obj) {
                                        $('.radio_'+$(obj).data('term_id')+'_'+$(obj).data('taxonomy')).parents('li').find('.berocket_aapf_count').text($(obj).parents('li').find('.berocket_aapf_count').text());
                                        hide_show_o_value( $('.radio_'+$(obj).data('term_id')+'_'+$(obj).data('taxonomy')), $(obj).parents('li').find('.berocket_aapf_count').text() );
                                    });
                                } else if( $(o).data('type') == 'select' ) {
                                    $(o).find('option').each( function(j, obj) {
                                        $('.select_'+$(obj).data('term_id')).text($(obj).text());
                                    });
                                }
                            }
                        });
                    }
                    berocket_aapf_attribute_data.jquery = false;
                    berocket_aapf_attribute_data.loaded = false;
                } else {
                    var data = {attributesname: berocket_aapf_attribute_data.name, attributes: berocket_aapf_attribute_data.data};
                    if( the_ajax_script.recount_products ) {
                        $('.berocket_aapf_widget').each(function (i,o){
                            if( $(o).data('count_show') == 'show' ) {
                                if( $(o).data('type') == 'color' || $(o).data('type') == 'checkbox' || $(o).data('type') == 'radio'  || $(o).data('type') == 'select' || $(o).data('type') == 'image' ) {
                                    attribute_pos = data.attributesname.indexOf($(o).data('attribute'));
                                    if( attribute_pos >= 0 ) {
                                        if( $(o).data('type') == 'color' || $(o).data('type') == 'checkbox' || $(o).data('type') == 'image' ) {
                                            data.attributes[attribute_pos].forEach( function(element, index, array) {
                                                $(o).find('.checkbox_'+element.term_id).parents('li').find('.berocket_aapf_count').text(element.count);
                                                hide_show_o_value($('.checkbox_'+element.term_id), element.count);
                                            });
                                        } else if( $(o).data('type') == 'radio' ) {
                                            data.attributes[attribute_pos].forEach( function(element, index, array) {
                                                $(o).find('.radio_'+element.term_id+'_'+element.taxonomy).parents('li').find('.berocket_aapf_count').text(element.count);
                                                hide_show_o_value($('.radio_'+element.term_id+'_'+element.taxonomy), element.count);
                                            });
                                        } else if( $(o).data('type') == 'select' ) {
                                            data.attributes[attribute_pos].forEach( function(element, index, array) {
                                                $(o).find('.select_'+element.term_id).text($(o).find('.select_'+element.term_id).data('term_name')+' ('+element.count+')');
                                            });
                                        } 
                                    }
                                }
                            }
                        });
                    }
                    berocket_aapf_attribute_data.loaded = false;
                    berocket_aapf_attribute_data.name = [];
                    berocket_aapf_attribute_data.data = [];
                }
            }
        }

        function hide_show_o_value($block, count) {
            if( the_ajax_script.hide_o_value ) {
                if( count == 0 ) {
                    $block.parents('li').addClass('berocket_hide_o_value');
                } else {
                    $block.parents('li').removeClass('berocket_hide_o_value');
                }
                var $parent = $block.parents('ul.berocket_aapf_widget');
                $parent.each( function ( i, o ) {
                    if( the_ajax_script.hide_o_value && $(o).find('.berocket_hide_o_value').length > 0 || 
                    the_ajax_script.hide_sel_value && $(o).find('.berocket_hide_sel_value').length > 0 ) {
                        $(o).find('.berocket_widget_show_values').show();
                    } else {
                        $(o).find('.berocket_widget_show_values').hide();
                    }
                });
            }
        }

        function updateLocation( args, pushstate, return_request ){
            if ( typeof return_request == 'undefined' ) return_request = false;
            uri_request_array = [];
            uri_request = '';
            temp_terms = [];
            var taxonomy_sparator = "|", start_terms = "[", end_terms = "]", variable = 'filters';
            if( the_ajax_script.nice_urls ) {
                taxonomy_sparator = the_ajax_script.nice_url_split;
                start_terms = the_ajax_script.nice_url_value_1;
                end_terms = the_ajax_script.nice_url_value_2;
                variable = the_ajax_script.nice_url_variable;
            }

            if( args.orderby && the_ajax_script.default_sorting != args.orderby ){
                uri_request += 'order-'+args.orderby;
            }
            if( args.product_cat && args.product_cat > 0 ){
                if( uri_request ) uri_request += taxonomy_sparator;
                uri_request += 'pcategory-'+args.product_cat;
            }
            if( args.price ){
                $price_obj = $('.berocket_filter_price_slider');
                if( ( args.price[0] || args.price[0] === 0 ) && args.price[1] && ( args.price[0] != $price_obj.data('min') || args.price[1] != $price_obj.data('max') ) ){
                    if( uri_request ) uri_request += taxonomy_sparator;
                    uri_request += 'price'+start_terms+args.price[0]+'_'+args.price[1]+end_terms;
                }
            }

            if( args.limits ){
                $(args.limits).each(function (i,o){
                    if( o[0].substring(0, 3) == 'pa_' ) {
                        if( !in_array( o[0].substring(3), temp_terms ) ){
                            temp_terms[temp_terms.length] = o[0].substring(3);
                        }
                        if( typeof uri_request_array[in_array( o[0].substring(3), temp_terms )] == 'undefined' ) {
                            uri_request_array[in_array(o[0].substring(3), temp_terms)] = [];
                        }
                        uri_request_array[in_array( o[0].substring(3), temp_terms )]
                            [uri_request_array[in_array( o[0].substring(3), temp_terms )].length] = [o[1],o[2]];
                    } else {
                        if( !in_array( o[0], temp_terms ) ){
                            temp_terms[temp_terms.length] = o[0];
                        }
                        if( typeof uri_request_array[in_array( o[0], temp_terms )] == 'undefined' ) {
                            uri_request_array[in_array(o[0], temp_terms)] = [];
                        }
                        uri_request_array[in_array( o[0], temp_terms )]
                            [uri_request_array[in_array( o[0], temp_terms )].length] = [o[1],o[2]];
                    }
                });
            }
            if( args.terms ){
                $(args.terms).each(function (i,o){
                    if ( the_ajax_script.slug_urls ) {
                        o[1] = o[3];
                    }
                    if( o[0].substring(0, 3) == 'pa_' ) {
                        if( !in_array( o[0].substring(3), temp_terms ) ){
                            temp_terms[temp_terms.length] = o[0].substring(3);
                        }
                        if( typeof uri_request_array[in_array( o[0].substring(3), temp_terms )] == 'undefined' ) {
                            uri_request_array[in_array(o[0].substring(3), temp_terms)] = [];
                        }
                        uri_request_array[in_array( o[0].substring(3), temp_terms )]
                            [uri_request_array[in_array( o[0].substring(3), temp_terms )].length] = [o[1],o[2]];
                    } else {
                        if( !in_array( o[0], temp_terms ) ){
                            temp_terms[temp_terms.length] = o[0];
                        }
                        if( typeof uri_request_array[in_array( o[0], temp_terms )] == 'undefined' ) {
                            uri_request_array[in_array(o[0], temp_terms)] = [];
                        }
                        uri_request_array[in_array( o[0], temp_terms )]
                            [uri_request_array[in_array( o[0], temp_terms )].length] = [o[1],o[2]];
                    }
                });
            }

            var uri = the_ajax_script.current_page_url;
            if ( the_ajax_script.trailing_slash ) {
                if( uri && uri.slice(-1) != '/' ) {
                    uri += '/';
                }
            }

            if( uri_request_array.length ){
                $(uri_request_array).each(function (i,o){
                    if( uri_request ) uri_request += taxonomy_sparator;

                    if( typeof o != 'object' ){
                        uri_request += encodeURIComponent( o );
                    }else{
                        cnt_oo = false;
                        uri_request += encodeURIComponent( temp_terms[i] )+start_terms;

                        $(o).each(function (ii,oo){
                            if( ( oo[1] == 'AND' || oo[1] == 'OR' ) ){
                                if( cnt_oo ){
                                    if(oo[1] == 'AND'){
                                        uri_request += encodeURIComponent('+');
                                    }else{
                                        uri_request += encodeURIComponent('-');
                                    }
                                }
                            }else{
                                oo[0] += '_'+oo[1];
                            }
                            uri_request += encodeURIComponent(oo[0]);
                            cnt_oo = true;
                        });
                        uri_request += end_terms;
                    }
                });
            }
            uri_request = uri_request;

            if( !pushstate ) {
                return uri_request;
            }
            if ( the_ajax_script.trailing_slash ) {
                if( the_ajax_script.nice_urls && uri_request && uri_request.slice(-1) != '/' ) {
                    uri_request += '/';
                }
            }

            cur_page = $(the_ajax_script.pagination_class).find('span.current').first().text();
            if( prev_page = parseInt( location.href.replace(/.+\/page\/([0-9]+).+/, "$1") ) ){
                if( ! parseInt( cur_page ) ){
                    cur_page = prev_page;
                }
                if(berocket_aapf_widget_first_page_jump && the_ajax_script.first_page)   {
                    cur_page = 1;
                }
                if( the_ajax_script.nice_urls ) {
                    if( uri_request ){
                        uri = uri + variable + "/" + uri_request;
                    }
                    if( cur_page > 1 ) {
                        uri = uri + "page/" + cur_page + "/";
                    }
                } else {
                    if( cur_page > 1 ) {
                        uri = uri + "page/" + cur_page + "/";
                    }
                    if( uri_request ){
                        uri = uri + "?filters=" + uri_request;
                    }
                }
            }else{
                something_added = false;
                if( /\?/.test(location.href) ){
                    passed_vars1 = location.href.split('?');
                    if( passed_vars1[1] ){
                        passed_vars2 = [];
                        temp2 = [];
                        if( /&/.test(passed_vars1[1]) ) {
                            passed_vars2 = passed_vars1[1].split('&');
                            passed_vars2_length = passed_vars2.length;
                            for ( k = 0; k < passed_vars2_length; k++ ){
                                temp = passed_vars2[k].split('=');
                                passed_vars2[k] = [];
                                passed_vars2[k][0] = temp.shift();
                                passed_vars2[k][1] = temp.join("=");
                            }
                        }else{
                            passed_vars2[0] = [];
                            temp = passed_vars1[1].split('=');
                            passed_vars2[0][0] = temp.shift();
                            passed_vars2[0][1] = temp.join("=");
                        }
                        for ( k = 0; k < passed_vars2.length; k++ ){
                            if( passed_vars2[k][0] == 'filters' || passed_vars2[k][0] == 'page'  || passed_vars2[k][0] == 'paged' ) continue;

                            if( something_added ) uri += '&';
                            else if ( the_ajax_script.trailing_slash ) { 
                                uri += '/?';
                            } else {
                                uri += '?';
                            }

                            uri += passed_vars2[k][0]+'='+passed_vars2[k][1];
                            something_added = true;
                        }
                    }
                }
                if(berocket_aapf_widget_first_page_jump && the_ajax_script.first_page) {
                    cur_page = 1;
                }
                if( the_ajax_script.nice_urls ) {
                    if( uri_request ) {
                        if( /\?/.test(location.href) ){
                            passed_vars1 = location.href.split('?');
                            if( passed_vars1[0] && passed_vars1[0].slice(-1) != '/' ) {
                                passed_vars1[0] += '/';
                            }
                            uri = passed_vars1[0] + "/"+variable+"/" + uri_request;
                            if( cur_page > 1 ){
                                uri = uri + 'page/' + cur_page + '/';
                            }
                            uri = uri + + '?' + passed_vars1[1];
                        } else {
                            uri = uri + variable + "/" + uri_request;
                            if( cur_page > 1 ){
                                uri = uri + 'page/' + cur_page + '/';
                            }
                        }
                    }
                    else if( cur_page > 1 ){
                        uri = uri + 'page/' + cur_page + '/';
                    }
                } else {
                    if( something_added && uri_request ){
                        uri = uri + "&filters=" + uri_request;
                        if( cur_page > 1 ){
                            uri = uri + "&paged=" + parseInt( cur_page );
                        }
                    }else if( uri_request ){
                        uri = uri + "?filters=" + uri_request;
                        if( cur_page > 1 ){
                            uri = uri + "&paged=" + parseInt( cur_page );
                        }
                    }else if( something_added && cur_page > 1 ){
                        uri = uri + "&paged=" + parseInt( cur_page );
                    }else if( cur_page > 1 ){
                        uri = uri + "?paged=" + parseInt( cur_page );
                    }
                }
            }

            if( return_request ) {
                return uri;
            } else {
                var stateParameters = { BeRocket: "Rules" };
                history.pushState(stateParameters, "BeRocket Rules", uri);
                history.pathname = uri;
            }
        }

        function aapf_action_init(){
            // Take control over (default) pagination and sorting, make it AJAXy and work with filters
            $(the_ajax_script.pagination_class).on('click', 'a', function (event) {
                event.preventDefault();
                if ( $(this).hasClass('next') ) {
                    _next_page = $(the_ajax_script.pagination_class+' span.current').first().text();
                    _next_page = _next_page.replace(/\D/g,'');
                    _next_page = parseInt( _next_page ) + 1;
                } else if ( $(this).hasClass('prev') ) {
                    _next_page = $(the_ajax_script.pagination_class+' span.current').first().text();
                    _next_page = _next_page.replace(/\D/g,'');
                    _next_page = parseInt( _next_page ) - 1;
                } else {
                    _next_page = $(this).text();
                    _next_page = _next_page.replace(/\D/g,'');
                }
                $(the_ajax_script.pagination_class+' span.current').removeClass('current');
                $(this).after("<span class='page-numbers current'>"+_next_page+"</span>").remove();
                if( the_ajax_script.first_page ) {
                    berocket_aapf_widget_first_page_jump = false;
                }
                updateProducts(true);
            });
        }

        function in_array(needle, haystack, strict) {
            var found = false, key, strict = !!strict;
            for (key in haystack) {
                if ((strict && haystack[key] === needle) || (!strict && haystack[key] == needle)) {
                    found = key;
                    break;
                }
            }
            return found;
        }

        $('.berocket_aapf_widget').on("click", "input[type=radio]", function(event){
            event.preventDefault();
            if ( $(this).prop('checked') ) {
                $label = $(this).parents('li').find('.berocket_label_widgets');
                setTimeout(function() { 
                    $label.click();
                }, 5); 
            }
        });
        $('.berocket_aapf_widget').on("change", "input, select", function(){
            current_value = [];
            $berocket_aapf_last_changed = $(this);
            if($(this).attr('type') == 'checkbox' || $(this).attr('type') == 'radio')
            {
                $label = $(this).parents('li').find('.berocket_label_widgets');
                if( $label.hasClass('berocket_checked')) {
                    $('.'+$label.data('for')).prop('checked', false).removeAttr('checked').trigger('refresh');
                    $('.'+$label.data('for')).parents('li').removeClass('berocket_hide_sel_value').find('.berocket_label_widgets').removeClass('berocket_checked');
                    $label.removeClass('berocket_checked');
                } else {
                    $('.'+$label.data('for')).prop('checked', true).trigger('refresh');
                    if( $label.parents('li').find('input').attr('type') == 'radio' ) {
                        $('.'+$label.data('for')).parents('.berocket_aapf_widget').find('li').removeClass('berocket_hide_sel_value').find('.berocket_label_widgets').removeClass('berocket_checked');
                    }
                    $('.'+$label.data('for')).parents('li').find('.berocket_label_widgets').addClass('berocket_checked');
                    if( the_ajax_script.hide_sel_value ) {
                        $('.'+$label.data('for')).parents('li').addClass('berocket_hide_sel_value');
                    }
                    $label.addClass('berocket_checked');
                }
                $('.'+$label.data('for')).parents('ul').find('input').trigger('refresh');
                if( the_ajax_script.hide_sel_value ) {
					$for_objects = $('.'+$label.data('for')).parents('.berocket_aapf_widget');
					$for_objects.each(function (i,o){
                        $hiden_objects = $(o).find('.berocket_hide_o_value, .berocket_hide_sel_value');
                        if( $hiden_objects.length == 0 ) {
                            $(o).find('.berocket_widget_show_values').hide();
                        } else {
                            $(o).find('.berocket_widget_show_values').show();
                        }
                    });
                }
                
                if($(this).prop('checked'))
                {
                    $('.'+$label.data('for')).prop('checked', true).trigger('refresh');
                    if( the_ajax_script.hide_sel_value ) {
                        $('.'+$label.data('for')).parents('li').addClass('berocket_hide_sel_value');
                    }
                }
                else
                {
                    $('.'+$label.data('for')).prop('checked', false).removeAttr('checked').trigger('refresh').parents('li').removeClass('berocket_hide_sel_value');
                }
                $(this).parents('.berocket_aapf_widget').find('input').each( function ( i, o ) {
                    if ( $(o).prop('checked') ) {
                        current_value.push( parseInt( $(o).data('term_id') ) );
                    }
                });
            } else if($(this).is('select'))
            {
                if( $(this).parents('.berocket_aapf_widget').data('child_parent') != 'child' ) {
                    $('select.'+$(this).data('taxonomy')).val($(this).find('option:selected').val()).trigger('refresh');
                }
                current_value.push( parseInt( $(this).find('option:selected').val() ) );
                if( ! $(this).find('option:selected').val() ) {
                    current_value = false;
                }
            }
            var $widget_child = '';
            if ( $(this).parents('.berocket_aapf_widget').data('child_parent') == 'parent' || $(this).parents('.berocket_aapf_widget').data('child_parent') == 'child' ) {
                berocket_aapf_child_parent_loaded = false;
                $widget_child = '.'+$(this).parents('.berocket_aapf_widget').data('attribute')+'_child_';
                if ( $(this).parents('.berocket_aapf_widget').data('child_parent') == 'parent' ) {
                    $widget_child += '1';
                } else {
                    $widget_child += ( parseInt( $(this).parents('.berocket_aapf_widget').data('child_parent_depth') ) + 1 );
                }
                $widget_child = $($widget_child);
                berocket_remove_child ( $widget_child );
            }
            updateProducts();
            if ( ( $(this).parents('.berocket_aapf_widget').data('child_parent') == 'parent' || $(this).parents('.berocket_aapf_widget').data('child_parent') == 'child' ) && current_value !== false ) {
                berocket_child_load ( $widget_child, $(this).parents('.berocket_aapf_widget').data('attribute'), current_value, 'default' );
            }
            if( !berocket_aapf_child_parent_loaded ) {
                berocket_aapf_child_parent_loaded = true;
                berocket_product_recount();
            }
        });

        berocket_set_slider = function ( i, o ) {
            var all_terms_name;
            $(o).slider({
                range: true,
                min: parseFloat($(o).data('min')),
                max: parseFloat($(o).data('max')),
                values: [$(o).data('value1'),$(o).data('value2')],
                create: function( event, ui ) {
                    all_terms_name = $(o).data('all_terms_name');
                    $o = $(o);
                    if( $(o).data('all_terms_name') == null )  {
                        $( '#'+$o.data('fields_1') ).val( berocket_format_number ($(o).data('value1') / $(o).data( 'step' ) ) );
                        $( '#'+$o.data('fields_2') ).val( berocket_format_number ($(o).data('value2') / $(o).data( 'step' ) ) );
                        $(o).data('value_1', $(o).data('value1') / $(o).data( 'step' ) );
                        $(o).data('value_2', $(o).data('value2') / $(o).data( 'step' ) );
                    } else {
                        $( '#'+$o.data('fields_1') ).val( all_terms_name[ $(o).data('value1')>>0 ] );
                        $( '#'+$o.data('fields_2') ).val( all_terms_name[ $(o).data('value2')>>0 ] );
                        $(o).data('value_1', all_terms_name[ $(o).data('value1')>>0 ] );
                        $(o).data('value_2', all_terms_name[ $(o).data('value2')>>0 ] );
                    }
                },
                stop: function( ){
                    var $widget_child = '', current_value = false;
                    if ( $(o).data('min') != $(o).data('value1') || $(o).data('max') != $(o).data('value2') ) {
                        current_value = [$(o).data('value1'), $(o).data('value2')];
                    }
                    if ( $(o).parents('.berocket_aapf_widget').data('child_parent') == 'parent' || $(o).parents('.berocket_aapf_widget').data('child_parent') == 'child' ) {
                        
                        $widget_child = '.'+$(o).parents('.berocket_aapf_widget').data('attribute')+'_child_';
                        if ( $(o).parents('.berocket_aapf_widget').data('child_parent') == 'parent' ) {
                            $widget_child += '1';
                        } else {
                            $widget_child += ( parseInt( $(o).parents('.berocket_aapf_widget').data('child_parent_depth') ) + 1 );
                        }
                        $widget_child = $($widget_child);
                        berocket_remove_child ( $widget_child );
                    }
                    $berocket_aapf_last_changed = $(o);
                    updateProducts();
                    if ( ( $(o).parents('.berocket_aapf_widget').data('child_parent') == 'parent' || $(o).parents('.berocket_aapf_widget').data('child_parent') == 'child' ) && current_value !== false ) {
                        berocket_child_load ( $widget_child, $(o).parents('.berocket_aapf_widget').data('attribute'), current_value, 'slider' );
                    }
                    if( !berocket_aapf_child_parent_loaded ) {
                        berocket_aapf_child_parent_loaded = true;
                        berocket_product_recount();
                    }
                }
            }).bind({
                slide: function( event, ui ) {
                    $o = $(ui.handle).parents('div.berocket_filter_slider');
                    vals = ui.values;
                    if( $(o).data('all_terms_name') == null ) {
                        $( '#'+$o.data('fields_1') ).val( berocket_format_number (vals[0]/$(o).data('step')) );
                        $( '#'+$o.data('fields_2') ).val( berocket_format_number (vals[1]/$(o).data('step')) );
                        $o.data('value_1', (vals[0]/$(o).data('step')));
                        $o.data('value_2', (vals[1]/$(o).data('step')));
                    } else {
                        $( '#'+$o.data('fields_1') ).val( all_terms_name[vals[0]] );
                        $( '#'+$o.data('fields_2') ).val( all_terms_name[vals[1]] );
                        $o.data('value_1', all_terms_name[vals[0]]);
                        $o.data('value_2', all_terms_name[vals[1]]);
                    }

                    if ( $o.data('child_parent') != 'child' && $o.data('child_parent') != 'parent' ) {
                        $('.slide div').each(function( i, obj ) {
                            if( $(obj).data('taxonomy') == $(o).data('taxonomy') ) {
                                $(obj).slider("values", vals);
                                if( $(o).data('all_terms_name') == null ) {
                                    $( '#'+$(obj).data('fields_1') ).val( berocket_format_number (vals[0] / $(obj).data( 'step' ) ) );
                                    $( '#'+$(obj).data('fields_2') ).val( berocket_format_number (vals[1] / $(obj).data( 'step' ) ) );
                                    $(obj).data('value1', (vals[0]/$(o).data('step')));
                                    $(obj).data('value2', (vals[1]/$(o).data('step')));
                                } else {
                                    $( '#'+$(obj).data('fields_1') ).val( all_terms_name[ vals[0] ] );
                                    $( '#'+$(obj).data('fields_2') ).val( all_terms_name[ vals[1] ] );
                                    $(obj).data('value1', all_terms_name[vals[0]]);
                                    $(obj).data('value2', all_terms_name[vals[1]]);
                                }
                            }
                        });
                    }
                }
            });
        }

        $( ".berocket_filter_slider" ).each(function (i,o){
            berocket_set_slider ( i, o );
        });

        $(".berocket_aapf_widget_height_control").each(function (i,o){
            $(o).css('height', $(o).height()).mCustomScrollbar({
                axis: "xy",
                theme: $(o).data('scroll_theme'),
                scrollInertia: 300
            });
        });

        var berocket_unselect_all = false;

        $(".berocket_aapf_widget_selected_area").on('click', '.br_unselect_all', function (event){
            event.preventDefault();
            berocket_unselect_all = true;
            $(this).parents(".berocket_aapf_widget_selected_area").find('.berocket_aapf_widget_selected_filter a').trigger('click');
            berocket_unselect_all = false;
            $berocket_aapf_last_changed = $('.berocket_aapf_widget li').first();
            updateProducts();
        });

        $(".berocket_aapf_widget_selected_area, .berocket_aapf_widget").on('mouseenter', 'a', function (event){
            $(this).addClass('br_hover');
        });

        $(".berocket_aapf_widget_selected_area, .berocket_aapf_widget").on('mouseleave', 'a', function (event){
            $(this).removeClass('br_hover');
        });

        $(".berocket_aapf_widget_selected_area").on('click', 'a', function (event){
            event.preventDefault();
            $obj = $(this);
            el_type = $obj.data('el_type');
            $berocket_aapf_last_changed = $('.berocket_aapf_widget li').first();
            if ( el_type == 'checkbox' || el_type == 'color' || el_type == 'radio' ) {
                $('.' + $obj.data('el_id')).first().parents('li').find('label').trigger('click');
            } else if ( el_type == 'select' ) {
                $( 'select.'+$obj.data('el_id') )
                    .find('option:selected')
                    .prop('selected', false)
                    .end()
                    .find('option:first')
                    .prop('selected', true)
                    .end()
                    .val( $('select.'+$obj.data('el_id')).find('option:first').val() );

                updateProducts();
            } else if ( el_type == 'slider' ) {
                $slider = $('#'+$obj.data('el_id')).closest('li').find('.berocket_filter_slider');

                val1 = parseFloat($slider.data('min'));
                val2 = parseFloat($slider.data('max'));

                ui = {handle:$slider, values:[val1,val2]};
                $slider.slider( "values", [ val1, val2 ] ).trigger('slide', ui);

                updateProducts();
            }
        });

        // Option to take control over (default) sorting, make it AJAXy and work with filters
        if( the_ajax_script.control_sorting ) {
            $(document).on('submit', 'form.woocommerce-ordering', function (event) {
                event.preventDefault();
            });
            $(document).on('change', 'select.orderby', function (event) {
                event.preventDefault();
                updateProducts(true);
            });
        }

        aapf_action_init();
        init_styler();

        $(document).on('click', '.berocket_aapf_widget_update_button', function (event) {
            event.preventDefault();
            updateProducts(true);
        });

        update_data_containers();
        update_selected_area();

        $(document).on('click', '.berocket_label_widgets', function(event) {
            if( $(this).parents('li').find('input').attr('type') == 'checkbox' || $(this).parents('li').find('input').attr('type') == 'radio' ) {
                event.preventDefault();
                event.stopPropagation();
                $(this).parents('span').find('input').trigger('change');
            }
        });

        $('.berocket_aapf_widget-title_div').click( function( event ) {
            event.preventDefault();
            var widget_block = $(this).next('.berocket_aapf_widget');
            if(widget_block.css('display') == 'none')
            {
                widget_block.show(40, function(){widget_block.find('.mCSB_container').css('width', '');});
                $(this).find('span').removeClass('show_button').addClass('hide_button');
            }
            else
            {
                widget_block.hide(40);
                $(this).find('span').removeClass('hide_button').addClass('show_button');
            }
        });

        $('.berocket_aapf_widget .berocket_widget_show_values').click( function( event ) {
            event.preventDefault();
            var widget_block = $(this).parents('ul.berocket_aapf_widget');
            if(widget_block.hasClass('show_o_sel_values'))
            {
                widget_block.removeClass('show_o_sel_values');
                $(this).html(the_ajax_script.translate.show_value+'<span class="show_button"></span>');
            }
            else
            {
                widget_block.addClass('show_o_sel_values');
                $(this).html(the_ajax_script.translate.hide_value+'<span class="hide_button"></span>');
            }
        });

        $('.berocket_aapf_widget-title_div').on( the_ajax_script.description_show, '.berocket_aapf_description i', function( event ) {
            event.preventDefault();
            event.stopPropagation();
            if( $('.berocket_aapf_description_div').length == 0 ) {
                i_top = ( $(this).offset().top - $(document).scrollTop() ) + ( $(this).height() / 2 );
                i_left = $(this).offset().left;
                top_px = parseInt( i_top + $( document ).scrollTop() );
                if( i_top >= (window.innerHeight / 2) ) {
                    top_px -= ( $(this).next().height() );
                    top_side = 'bottom';
                } else {
                    top_side = 'top';
                    top_px -= 26;
                }

                side_px = i_left;
                if( i_left < (window.innerWidth / 2) ) {
                    side_px += $(this).width();
                    side = 'left';
                    deside = 'right';
                    bottom_side = 'top';
                    side_px += 9;
                } else {
                    side = 'right';
                    deside = 'left';
                    bottom_side = 'bottom';
                    side_px = (window.innerWidth - side_px) - 3;
                }

                $block = $(this).next().clone();
                $block.addClass( 'berocket_aapf_description_div_'+top_side+'_'+side ).addClass( 'berocket_aapf_description_div' ).css( 'top', top_px ).css( side, side_px );
                $block.find('.berocket_aapf_description_arrow').css('border-'+deside, '0').css('border-'+bottom_side, '0');
                $('body').append($block);
            }
        });

        $('.berocket_aapf_widget-title_div').on( the_ajax_script.description_hide, '.berocket_aapf_description i', function( event ) {
            event.preventDefault();
            event.stopPropagation();
            to_element = event.toElement || event.relatedTarget;
            if ( the_ajax_script.description_hide == 'mouseleave' && $(to_element).parents('.berocket_aapf_description_div').length == 0) {
                $('.berocket_aapf_description_div').remove();
            }
        });

        $(document).on(the_ajax_script.description_hide, '.berocket_aapf_description_div', function( event ) {
            event.preventDefault();
            event.stopPropagation();
            if ( the_ajax_script.description_hide == 'mouseleave' ) {
                $(this).remove();
            }
        });

        $(document).on(the_ajax_script.description_hide, function() {
            $('.berocket_aapf_description_div').remove();
        });

        $(document).scroll( function() {
            if( $('.berocket_aapf_widget_loading').length > 0 ) {
                loading_top = ( ( $(document).scrollTop() + ( window.innerHeight / 2 ) ) - $('.berocket_aapf_widget_loading').offset().top );
                if ( loading_top < 100 ) {
                    loading_top = 100;
                } else if ( loading_top > ( $('.berocket_aapf_widget_loading').height() - $('.berocket_aapf_widget_loading_container').height() ) ) {
                    loading_top = $('.berocket_aapf_widget_loading').height() - $('.berocket_aapf_widget_loading_container').height();
                }
                $('.berocket_aapf_widget_loading_container').css('top', loading_top);
			}
            $('.berocket_aapf_description_div').remove();
        });
        $(document).on( 'click', function( event ) {
            $('.berocket_aapf_product_count_desc').remove();
        });
        window.onpopstate = function(event) {
            if ( event.state != null && event.state.BeRocket == 'Rules' ) {
                location.reload();
            }
        };
        $('.berocket_wc_shortcode_fix .berocket_aapf_widget').each(function (i,o){
            if( $(o).data('count_show') == 'show' ) {
                if( $(o).data('type') == 'color' || $(o).data('type') == 'checkbox' || $(o).data('type') == 'image' ) {
                    $(o).find('input').each( function(j, obj) {
                        $('.checkbox_'+$(obj).data('term_id')).parents('li').find('.berocket_aapf_count').text($(obj).parents('li').find('.berocket_aapf_count').text());
                        hide_show_o_value( $('.checkbox_'+$(obj).data('term_id')), $(obj).parents('li').find('.berocket_aapf_count').text() );
                    });
                } else if( $(o).data('type') == 'radio' ) {
                    $(o).find('input').each( function(j, obj) {
                        $('.radio_'+$(obj).data('term_id')+'_'+$(obj).data('taxonomy')).parents('li').find('.berocket_aapf_count').text($(obj).parents('li').find('.berocket_aapf_count').text());
                        hide_show_o_value( $('.radio_'+$(obj).data('term_id')+'_'+$(obj).data('taxonomy')), $(obj).parents('li').find('.berocket_aapf_count').text() );
                    });
                } else if( $(o).data('type') == 'select' ) {
                    $(o).find('option').each( function(j, obj) {
                        $('.select_'+$(obj).data('term_id')).text($(obj).text());
                    });
                }
            }
        });
    });
})(jQuery);

function berocket_format_number (number) {
    var num = number.toFixed(the_ajax_script.number_style[2]);
    num = num.toString();
    var decimal = num.split('.');
    var new_number = decimal[0];
    if(num.indexOf('.') != -1)
    {
        decimal = decimal[1];
    }
    new_number = new_number.replace(/\d(?=(?:\d{3})+(?:$))/g, function($0, i){
        return $0+the_ajax_script.number_style[0];
    });
    if(num.indexOf('.') != -1)
    {
        new_number = new_number+the_ajax_script.number_style[1]+decimal;
    }
    return new_number;
}
function berocket_remove_child( $widget ) {
    $widget_child = '.'+jQuery($widget).data('attribute')+'_child_';
    $widget_child_number = parseInt( jQuery($widget).data('child_parent_depth') ) ;
    while( jQuery( $widget_child + $widget_child_number ).length > 0 ) {
        $widget_removed = $widget_child + $widget_child_number;
        jQuery( $widget_removed ).find('.berocket_widget_show_values').hide();
        jQuery( $widget_removed ).find( 'li' ).each( function ( i, o ) {
            if( ! jQuery(o).is('.berocket_child_parent_sample') && jQuery(o).parents('.berocket_child_parent_sample').length == 0 && ! jQuery(o).is('.berocket_widget_show_values') ) {
                jQuery(o).remove();
            }
        });
        $widget_child_number++;
    }
}

function berocket_child_load ( $widget, taxonomy, term_id, type ) {
    if( $widget.length > 0 ) {
        term_id = JSON.stringify(term_id);
        data = {action: 'br_aapf_get_child',taxonomy: taxonomy, term_id: term_id, type: type};
        terms = false;
        jQuery.ajax({
            url: the_ajax_script.ajaxurl,
            data: data,
            type: 'POST',
            success: function (data) {
                terms = data;
            },
            dataType: 'json',
            async: false
        });
        berocket_child_replace ( $widget, terms );
    }
}

function berocket_child_replace ( $widget, terms ) {
    $widget = jQuery($widget);
    html_sample = $widget.find('.berocket_child_parent_sample ul').html();
    $place = $widget.find('.berocket_child_parent_sample');
    select = false;
    html_single = '';
    if ( $widget.data('type') == 'slider' ) {
        if( terms.length > 1 ) {
            element = html_sample.replace( /R__term_id__R/g, terms[0].term_id );
            element = element.replace( /R__count__R/g, terms[0].count );
            element = element.replace( /R__slug__R/g, terms[0].slug );
            element = element.replace( /R__name__R/g, terms[0].name );
            element = element.replace( /R__taxonomy__R/g, terms[0].taxonomy );
            element = element.replace( /R__class__R/g, terms[0].r_class );
            allterms = [];
            for ( i = 0; i < terms.length; i++ ) {
                allterms.push(terms[i].name);
            }
            element = element.replace( /R__min__R/g, 0 );
            element = element.replace( /R__value1__R/g, 0 );
            element = element.replace( /R__max__R/g, ( allterms.length - 1 ) );
            element = element.replace( /R__value2__R/g, ( allterms.length - 1 ) );
            element = element.replace( /"R__allterm__R"/g, "'"+JSON.stringify(allterms)+"'" );
            $element = jQuery(element);
            $place.after($element);
            
            berocket_set_slider ( 0, $widget.find('.berocket_filter_slider').last() );
        }
    } else {
        if ( $widget.find('.berocket_child_parent_sample').is('.select') ) {
            select = true;
            html_sample = html_sample.replace( /<ul/g, '<select' );
            html_sample = html_sample.replace( /<\/ul>/g, '</select>' );
            html_sample = html_sample.replace( /<li/g, '<option' );
            html_sample = html_sample.replace( /<\/li>/g, '</option>' );
            html_sample = '<li>' + html_sample + '</li>';
            html_single = html_sample.split('</option>')[1]+'</option>';
        }
        for( i = 0; i < terms.length; i++ ) {
            element = html_sample.replace( /R__term_id__R/g, terms[i].term_id );
            element = element.replace( /R__count__R/g, terms[i].count );
            element = element.replace( /R__slug__R/g, terms[i].slug );
            element = element.replace( /R__name__R/g, terms[i].name );
            element = element.replace( /R__taxonomy__R/g, terms[i].taxonomy );
            element = element.replace( /R__class__R/g, terms[i].r_class );
            element = element.replace( /#R/g, '#'+terms[i].color );
            $element = jQuery(element);
            $place.after($element);
            if ( select && i == 0 ) {
                html_sample = html_single;
                $place = $widget.find('select option').last();
            }
        }
    }
}

function load_hash_test() {
    hash = location.hash;
    if( location.hash != "")
        location.hash = "";
    test_loc = location.href;
    reload = false;
    var filtersRegex = /filters=\((.*)\)/;
    if( ( filters_hash = filtersRegex.exec(hash) ) != null ) {
        if( test_loc.indexOf('?') != -1 ) {
            href_param = test_loc.split('?');
            if(href_param[1].indexOf('filters=') != -1) {
                href_params_array = href_param[1].split('&');
                for( var i = 0; i < href_params_array.length; i++ ) {
                    if( href_params_array[i].indexOf('filters=') != -1) {
                        test_loc = test_loc.replace(href_params_array[i],filters_hash[1]).replace(/#/,"").replace('&&','&');
                    }
                }
            } else {
                test_loc = test_loc.replace(/#/,"")+"&"+filters_hash[1];
            }
        } else {
            test_loc = test_loc.replace(/#/,"")+"?"+filters_hash[1];
        }
        reload = true;
    }
    var filtersRegex = /paged=([0-9]+)/;
    if( ( filters_hash = filtersRegex.exec(hash) ) != null ) {
        if( test_loc.indexOf('?') != -1 ) {
            href_param = test_loc.split('?');
            if(href_param[1].indexOf('paged=') != -1) {
                href_params_array = href_param[1].split('&');
                for( var i = 0; i < href_params_array.length; i++ ) {
                    if( href_params_array[i].indexOf('filters=') != -1) {
                        test_loc = test_loc.replace(href_params_array[i],filters_hash[0]).replace(/#/,"").replace('&&','&');
                    }
                }
            } else {
                test_loc = test_loc.replace(/#/,"")+"&"+filters_hash[0];
            }
        } else {
            test_loc = test_loc.replace(/#/,"")+"?"+filters_hash[0];
        }
        reload = true;
    }
    if(reload) {
        location.href = test_loc;
    }
}
load_hash_test();